<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd" default-lazy-init="false">
	 <!--i18n 配置 star-->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages"/>
		<property name="useCodeAsDefaultMessage" value="true"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/> -->
	<!--i18n 配置 end-->
	
	<!--扫描 控制器注解 start-->
<!-- 	<context:component-scan base-package="com.**.controller" use-default-filters="true">
		<context:include-filter type="annotation"
								expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation"
								expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan> -->
	    <!-- 扫描注解Bean start-->
    <context:component-scan base-package="com.visionet.ivr.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 扫描注解Bean end-->
	<!--<context:component-scan base-package="springfox.petstore.controller" use-default-filters="true"/>-->
	<!--扫描 控制器注解 end-->
	<bean name="applicationSwaggerConfig" class="com.visionet.core.web.ApplicationSwaggerConfig"></bean>
	<!--启用注解配置 start-->
	<context:annotation-config />
	<!--启用注解配置 end-->

	<!-- 会自动注册了 validator="validator" validator  ConversionService   conversion-service="conversionService"-->
	<mvc:annotation-driven
			conversion-service="conversionService"
			content-negotiation-manager="contentNegotiationManager"
			enable-matrix-variables="true"
			>
		<!--enableMatrixVariables="true">-->
		<!-- 异步支持 默认30秒超时 -->
		<!--<mvc:async-support default-timeout="30000" task-executor="executor"/>-->

		<mvc:message-converters register-defaults="true">
			<!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8"/>
				<property name="supportedMediaTypes">
					<list>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg index="0" value="text"/>
							<constructor-arg index="1" value="plain"/>
							<constructor-arg index="2" value="UTF-8"/>
						</bean>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg index="0" value="*"/>
							<constructor-arg index="1" value="*"/>
							<constructor-arg index="2" value="UTF-8"/>
						</bean>
					</list>
				</property>
			</bean>

			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>application/xml;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
						<value>text/plain;charset=utf-8</value>
						<value>application/octet-stream;charset=utf-8</value>
						<value>application/x-www-form-urlencoded;charset=UTF-8</value>
					</list>
				</property>
				<!--<property name="serializerFeature">-->
				<!--这个地方加上这个功能吧，能自己配置一些东西，比如时间的格式化，null输出""等等-->
				<!--</property>-->
				</bean>
				<!-- <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
				      <property name="supportedMediaTypes">
				           <list>
								<value>application/json;charset=UTF-8</value>
								<value>application/xml;charset=UTF-8</value>
								<value>text/html;charset=UTF-8</value>
								<value>text/plain;charset=utf-8</value>
								<value>application/octet-stream;charset=utf-8</value>
								<value>application/x-www-form-urlencoded;charset=UTF-8</value>
							</list>
				       </property>
				</bean> -->
			
		</mvc:message-converters>
		<!--自定义注解解析配置 start-->
		 <!--  <mvc:argument-resolvers>
                <bean class="com.visionet.framework.core.base.web.bind.method.annotation.PageableMethodArgumentResolver"/>
                <bean class="com.visionet.framework.core.base.web.bind.method.annotation.SearchableMethodArgumentResolver"/>
         </mvc:argument-resolvers> -->
		<!--自定义注解解析配置 end-->
	</mvc:annotation-driven>

	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="registerDefaultFormatters" value="false" />
		<property name="formatters">
			<set>
				<bean class="org.springframework.format.number.NumberFormatAnnotationFormatterFactory" />
			</set>
		</property>
		<property name="formatterRegistrars">
			<set>
				<bean
					class="org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar">
					<property name="dateFormatter">
						<bean
							class="org.springframework.format.datetime.joda.DateTimeFormatterFactoryBean">
							<property name="pattern" value="yyyy-MM-dd" />
						</bean>
					</property>
				</bean>
			</set>
		</property>
	</bean>

    <!--<mvc:view-controller path="/" view-name="redirect:/index.html"/>-->
    <!-- 静态资源映射 -->
	<!--<mvc:resources mapping="/swagger/**" location="/WEB-INF/swagger/"/>-->
	<mvc:resources mapping="*.html" location="/WEB-INF/swagger/"/>
	<mvc:resources mapping="/swagger/**" location="/WEB-INF/swagger/"/>
	<!--拦截器-->
	<mvc:interceptors>
		<!-- <bean class="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor">
			<constructor-arg ref="conversionService"/>
		</bean> -->
		 <bean class="com.visionet.core.interceptor.Interceptor"/>
	</mvc:interceptors>
	
	<!-- 内容协商管理器  -->
	<!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="true"/>
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="true"/>
		<property name="parameterName" value="format"/>
		<!-- 是否忽略Accept Header -->
		<property name="ignoreAcceptHeader" value="false"/>
		<property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用  -->
			<value>
				json=application/json
				xml=application/xml
				html=text/html
			</value>
		</property>
		<!-- 默认的content type -->
		<!--<property name="defaultContentType" value="text/html"/>-->
		<property name="defaultContentType" value="application/json"/>
	</bean>

	<!-- ========================= VIEW定义 ========================= -->
	<!-- 内容协商视图解析器；根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml -->
	<!-- 会自动根据解析的contentType来决定使用哪个视图解析器（默认使用整个web应用中的viewResolver） -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="0">
		<!-- 内容协商管理器 用于决定media type -->
		<property name="contentNegotiationManager" ref="contentNegotiationManager"/>
		<!-- 默认视图 放在解析链最后 -->
		<property name="defaultViews">
			<list>
				<!-- <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/> -->
				<bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView"/>
				<!--<bean class="org.springframework.web.servlet.view.xml.MarshallingView"/>-->
			</list>
		</property>
	</bean>
	<!-- 默认视图解析器 -->
	<bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="contentType" value="text/html"/>
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8"></property>   
        <property name="maxUploadSize" value="10485760000"></property>  
        <property name="maxInMemorySize" value="40960"></property>  
   </bean>  
	
     <bean class="com.visionet.core.controller.DefaultControllerExceptionHandler"/>
	<!-- 控制器异常处理 -->
	<bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager"/>
	</bean>
	
	<!-- jedis -->
	<!--  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">    
     <property name="maxTotal" value="50000" />    
     <property name="maxIdle" value="50000" />    
     <property name="minIdle" value="100" />   
     <property name="maxWaitMillis" value="15000"/>    
     <property name="testOnBorrow" value="true" />    
 	</bean>  
 	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">  
      <constructor-arg index="0" ref="jedisPoolConfig" />  
      <constructor-arg index="1">  
          <list>  
              <bean class="redis.clients.jedis.JedisShardInfo">  
                  <constructor-arg name="host" value="127.0.0.1" />  
                  <constructor-arg name="port" value="6379" />  
                   <constructor-arg name="timeout" value="3000" />  
                  <constructor-arg name="weight" value="1" />  
                    <constructor-arg index="4" value="${redis.auth}"/>
              </bean>  
          </list>  
      </constructor-arg>  
  </bean> -->  
</beans>